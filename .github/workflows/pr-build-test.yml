name: PR Build Test

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Next.js app
        run: npm run build
      
      # 빌드 성공 시 PR에 코멘트 추가
      - name: Add success comment
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: commit } = await github.rest.repos.getCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.payload.pull_request.head.sha
            });
            
            const commitMessage = commit.commit.message;
            const commitHash = context.sha.substring(0,7);
            const commitUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/commit/${context.sha}`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `✅ 빌드 테스트 성공!

            📝 **커밋 정보**
            - **메시지**: ${commitMessage}
            - **해시**: [\`${commitHash}\`](${commitUrl})
            - **작성자**: @${context.actor}`
            });
      
      # 빌드 실패 시 PR에 코멘트 추가
      - name: Add failure comment
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: commit } = await github.rest.repos.getCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.payload.pull_request.head.sha
            });
            
            const commitMessage = commit.commit.message;
            const commitHash = context.sha.substring(0,7);
            const commitUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/commit/${context.sha}`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `❌ 빌드 테스트 실패!

            📝 **커밋 정보**
            - **메시지**: ${commitMessage}
            - **해시**: [\`${commitHash}\`](${commitUrl})
            - **작성자**: @${context.actor}`
            });
